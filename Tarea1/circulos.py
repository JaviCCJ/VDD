# -*- coding: utf-8 -*-
"""Circulos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jv5d3zjYiWCVN1kr3WWbZ6zwD4OyqJN6
"""

! pip install circlify

import pandas as pd
import circlify
import matplotlib.pyplot as plt

df = pd.DataFrame({
    'Name': ['Liverpool\n127548', 'Ámsterdam\n320600', 'Seúl\n915201'],
    'Value': [127548, 320600, 915201]
})

# compute circle positions:
circles = circlify.circlify(
    df['Value'].tolist(), 
    show_enclosure=False, 
    target_enclosure=circlify.Circle(x=0, y=0, r=1)
)

# Create just a figure and only one subplot
fig, ax = plt.subplots(figsize=(10,10))

# Title
ax.set_title('PIB (millones de $USD)')

# Remove axes
ax.axis('off')

# Find axis boundaries
lim = max(
    max(
        abs(circle.x) + circle.r,
        abs(circle.y) + circle.r,
    )
    for circle in circles
)
plt.xlim(-lim, lim)
plt.ylim(-lim, lim)

# list of labels
labels = df['Name']



# print circles
for circle, label in zip(circles, labels):
    if label == "Liverpool\n127548":
      x, y, r = circle
      # facecolor sets the fill color of the circle and edgecolor sets the border color
      ax.add_patch(plt.Circle((x, y), r*0.95, alpha=0.9, linewidth=2, color= '#97f2fc'))
      # boxstyle sets the border shape and pad sets the border fill
      plt.annotate(label,(x,y ) ,va='center', ha='center', bbox=dict(facecolor='#a8eff7', edgecolor='#97f2fc', boxstyle='round', pad=.5))
    elif label== "Ámsterdam\n320600" :
      x, y, r = circle
      # facecolor sets the fill color of the circle and edgecolor sets the border color
      ax.add_patch(plt.Circle((x, y), r*0.95, alpha=0.9, linewidth=2, color= '#8ceda6'))
      # boxstyle sets the border shape and pad sets the border fill
      plt.annotate(label,(x,y ) ,va='center', ha='center', bbox=dict(facecolor='#97f0af', edgecolor='#8ceda6', boxstyle='round', pad=.5))
    elif label== "Seúl\n915201" :
      x, y, r = circle
      # facecolor sets the fill color of the circle and edgecolor sets the border color
      ax.add_patch(plt.Circle((x, y), r*0.95, alpha=0.9, linewidth=2, color= '#c2a0fa'))
      # boxstyle sets the border shape and pad sets the border fill
      plt.annotate(label,(x,y ) ,va='center', ha='center', bbox=dict(facecolor='#c7a7fa', edgecolor='#c2a0fa', boxstyle='round', pad=.5))